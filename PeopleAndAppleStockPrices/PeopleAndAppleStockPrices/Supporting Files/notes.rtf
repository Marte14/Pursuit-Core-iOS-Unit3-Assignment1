{\rtf1\ansi\ansicpg1252\cocoartf1671
{\fonttbl\f0\fnil\fcharset0 Menlo-Italic;\f1\fswiss\fcharset0 Helvetica;\f2\fnil\fcharset0 Menlo-Regular;
\f3\fnil\fcharset0 Menlo-Bold;}
{\colortbl;\red255\green255\blue255;\red83\green101\blue121;\red255\green255\blue255;\red0\green0\blue0;
\red155\green35\blue147;\red92\green38\blue153;\red28\green0\blue207;\red196\green26\blue22;\red36\green82\blue86;
\red57\green0\blue160;\red50\green109\blue116;}
{\*\expandedcolortbl;;\csgenericrgb\c32401\c39745\c47507;\csgenericrgb\c100000\c100000\c100000;\csgenericrgb\c0\c0\c0;
\csgenericrgb\c60759\c13753\c57628;\csgenericrgb\c35922\c14825\c60191;\csgenericrgb\c11000\c0\c81000;\csgenericrgb\c77000\c10200\c8600;\csgenericrgb\c13924\c32052\c33684;
\csgenericrgb\c22454\c0\c62803;\csgenericrgb\c19418\c42935\c45455;}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\deftab692
\pard\tx692\pardeftab692\pardirnatural\partightenfactor0

\f0\i\fs28 \cf2 \cb3 // Uncomment the following line to preserve selection between presentations
\f1\i0\fs24 \cf0 \

\f2\fs28 \cf4         
\f0\i \cf2 // self.clearsSelectionOnViewWillAppear = false
\f1\i0\fs24 \cf0 \
\

\f2\fs28 \cf4         
\f0\i \cf2 // Uncomment the following line to display an Edit button in the navigation bar for this view controller.
\f1\i0\fs24 \cf0 \

\f2\fs28 \cf4         
\f0\i \cf2 // self.navigationItem.rightBarButtonItem = self.editButtonItem
\f1\i0\fs24 \cf0 \

\f2\fs28 \cf4     \}
\f1\fs24 \cf0 \
\

\f2\fs28 \cf4     
\f0\i \cf2 // MARK: - Table view data source
\f1\i0\fs24 \cf0 \
\

\f2\fs28 \cf4     
\f3\b \cf5 override
\f2\b0 \cf4  
\f3\b \cf5 func
\f2\b0 \cf4  numberOfSections(in tableView: \cf6 UITableView\cf4 ) -> \cf6 Int\cf4  \{
\f1\fs24 \cf0 \

\f2\fs28 \cf4         
\f0\i \cf2 // #warning Incomplete implementation, return the number of sections
\f1\i0\fs24 \cf0 \

\f2\fs28 \cf4         
\f3\b \cf5 return
\f2\b0 \cf4  \cf7 0
\f1\fs24 \cf0 \

\f2\fs28 \cf4     \}
\f1\fs24 \cf0 \
\

\f2\fs28 \cf4     
\f3\b \cf5 override
\f2\b0 \cf4  
\f3\b \cf5 func
\f2\b0 \cf4  tableView(
\f3\b \cf5 _
\f2\b0 \cf4  tableView: \cf6 UITableView\cf4 , numberOfRowsInSection section: \cf6 Int\cf4 ) -> \cf6 Int\cf4  \{
\f1\fs24 \cf0 \

\f2\fs28 \cf4         
\f0\i \cf2 // #warning Incomplete implementation, return the number of rows
\f1\i0\fs24 \cf0 \

\f2\fs28 \cf4         
\f3\b \cf5 return
\f2\b0 \cf4  \cf7 0
\f1\fs24 \cf0 \

\f2\fs28 \cf4     \}
\f1\fs24 \cf0 \
\

\f2\fs28 \cf4     
\f0\i \cf2 /*
\f1\i0\fs24 \cf0 \

\f0\i\fs28 \cf2     override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell \{
\f1\i0\fs24 \cf0 \

\f0\i\fs28 \cf2         let cell = tableView.dequeueReusableCell(withIdentifier: "reuseIdentifier", for: indexPath)
\f1\i0\fs24 \cf0 \
\

\f0\i\fs28 \cf2         // Configure the cell...
\f1\i0\fs24 \cf0 \
\

\f0\i\fs28 \cf2         return cell
\f1\i0\fs24 \cf0 \

\f0\i\fs28 \cf2     \}
\f1\i0\fs24 \cf0 \

\f0\i\fs28 \cf2     */
\f1\i0\fs24 \cf0 \
\

\f2\fs28 \cf4     
\f0\i \cf2 /*
\f1\i0\fs24 \cf0 \

\f0\i\fs28 \cf2     // Override to support conditional editing of the table view.
\f1\i0\fs24 \cf0 \

\f0\i\fs28 \cf2     override func tableView(_ tableView: UITableView, canEditRowAt indexPath: IndexPath) -> Bool \{
\f1\i0\fs24 \cf0 \

\f0\i\fs28 \cf2         // Return false if you do not want the specified item to be editable.
\f1\i0\fs24 \cf0 \

\f0\i\fs28 \cf2         return true
\f1\i0\fs24 \cf0 \

\f0\i\fs28 \cf2     \}
\f1\i0\fs24 \cf0 \

\f0\i\fs28 \cf2     */
\f1\i0\fs24 \cf0 \
\

\f2\fs28 \cf4     
\f0\i \cf2 /*
\f1\i0\fs24 \cf0 \

\f0\i\fs28 \cf2     // Override to support editing the table view.
\f1\i0\fs24 \cf0 \

\f0\i\fs28 \cf2     override func tableView(_ tableView: UITableView, commit editingStyle: UITableViewCellEditingStyle, forRowAt indexPath: IndexPath) \{
\f1\i0\fs24 \cf0 \

\f0\i\fs28 \cf2         if editingStyle == .delete \{
\f1\i0\fs24 \cf0 \

\f0\i\fs28 \cf2             // Delete the row from the data source
\f1\i0\fs24 \cf0 \

\f0\i\fs28 \cf2             tableView.deleteRows(at: [indexPath], with: .fade)
\f1\i0\fs24 \cf0 \

\f0\i\fs28 \cf2         \} else if editingStyle == .insert \{
\f1\i0\fs24 \cf0 \

\f0\i\fs28 \cf2             // Create a new instance of the appropriate class, insert it into the array, and add a new row to the table view
\f1\i0\fs24 \cf0 \

\f0\i\fs28 \cf2         \}    
\f1\i0\fs24 \cf0 \

\f0\i\fs28 \cf2     \}
\f1\i0\fs24 \cf0 \

\f0\i\fs28 \cf2     */
\f1\i0\fs24 \cf0 \
\

\f2\fs28 \cf4     
\f0\i \cf2 /*
\f1\i0\fs24 \cf0 \

\f0\i\fs28 \cf2     // Override to support rearranging the table view.
\f1\i0\fs24 \cf0 \

\f0\i\fs28 \cf2     override func tableView(_ tableView: UITableView, moveRowAt fromIndexPath: IndexPath, to: IndexPath) \{
\f1\i0\fs24 \cf0 \
\

\f0\i\fs28 \cf2     \}
\f1\i0\fs24 \cf0 \

\f0\i\fs28 \cf2     */
\f1\i0\fs24 \cf0 \
\

\f2\fs28 \cf4     
\f0\i \cf2 /*
\f1\i0\fs24 \cf0 \

\f0\i\fs28 \cf2     // Override to support conditional rearranging of the table view.
\f1\i0\fs24 \cf0 \

\f0\i\fs28 \cf2     override func tableView(_ tableView: UITableView, canMoveRowAt indexPath: IndexPath) -> Bool \{
\f1\i0\fs24 \cf0 \

\f0\i\fs28 \cf2         // Return false if you do not want the item to be re-orderable.
\f1\i0\fs24 \cf0 \

\f0\i\fs28 \cf2         return true
\f1\i0\fs24 \cf0 \

\f0\i\fs28 \cf2     \}
\f1\i0\fs24 \cf0 \

\f0\i\fs28 \cf2     */
\f1\i0\fs24 \cf0 \
\

\f2\fs28 \cf4     
\f0\i \cf2 /*
\f1\i0\fs24 \cf0 \

\f0\i\fs28 \cf2     // MARK: - Navigation
\f1\i0\fs24 \cf0 \
\

\f0\i\fs28 \cf2     // In a storyboard-based application, you will often want to do a little preparation before navigation
\f1\i0\fs24 \cf0 \

\f0\i\fs28 \cf2     override func prepare(for segue: UIStoryboardSegue, sender: Any?) \{
\f1\i0\fs24 \cf0 \

\f0\i\fs28 \cf2         // Get the new view controller using segue.destination.
\f1\i0\fs24 \cf0 \

\f0\i\fs28 \cf2         // Pass the selected object to the new view controller.
\f1\i0\fs24 \cf0 \

\f0\i\fs28 \cf2     \}
\f1\i0\fs24 \cf0 \

\f0\i\fs28 \cf2     */
\f1\i0\fs24 \cf0 \
\

\f2\fs28 \cf4 \}
\f1\fs24 \cf0 \
\
\
\
\
\
\
\
----------code below is only neceSARY when there is a network call. else use \
\

\f2\fs28 \cf4             
\f3\b \cf5 guard
\f2\b0 \cf4  
\f3\b \cf5 let
\f2\b0 \cf4  url = \cf6 URL\cf4 (string:\cf8 \cb3 "https://api.edamam.com/search?q=\cf4 \cb3 \\\cf8 \cb3 (\cf4 \cb3 searchTerm\cf8 \cb3 )&app_id=9c3eb43a&app_key=df425612fd80ead90c01dbf38d728275"\cf4 \cb3 )
\f3\b \cf5 else
\f2\b0 \cf4 \{
\f1\fs24 \cf0 \

\f2\fs28 \cf4         completionHandler(
\f3\b \cf5 nil
\f2\b0 \cf4 ,.\cf9 \cb3 badURL\cf4 \cb3 (\cf8 \cb3 "url failed"\cf4 \cb3 ))
\f1\fs24 \cf0 \

\f2\fs28 \cf4         
\f3\b \cf5 return
\f1\b0\fs24 \cf0 \

\f2\fs28 \cf4     \}
\f1\fs24 \cf0 \

\f2\fs28 \cf6 URLSession\cf4 .\cf6 shared\cf4 .\cf10 \cb3 dataTask\cf4 \cb3 (with: url)\{(data, response, error) 
\f3\b \cf5 in
\f1\b0\fs24 \cf0 \

\f2\fs28 \cf4     
\f3\b \cf5 if
\f2\b0 \cf4  
\f3\b \cf5 let
\f2\b0 \cf4  error = error \{
\f1\fs24 \cf0 \

\f2\fs28 \cf4         completionHandler(
\f3\b \cf5 nil
\f2\b0 \cf4 , .\cf9 \cb3 badData\cf4 \cb3 (error))
\f1\fs24 \cf0 \

\f2\fs28 \cf4     \}
\f3\b \cf5 else
\f2\b0 \cf4  
\f3\b \cf5 if
\f2\b0 \cf4  
\f3\b \cf5 let
\f2\b0 \cf4  data = data \{
\f1\fs24 \cf0 \

\f2\fs28 \cf4         
\f3\b \cf5 do
\f2\b0 \cf4 \{
\f1\fs24 \cf0 \

\f2\fs28 \cf4             
\f3\b \cf5 let
\f2\b0 \cf4  contactsSearchData = 
\f3\b \cf5 try
\f1\b0\fs24 \cf0 \

\f2\fs28 \cf4             \cf6 JSONDecoder\cf4 ().\cf10 \cb3 decode\cf4 \cb3 (\cf11 \cb3 ContactDetails\cf4 \cb3 .\cf11 \cb3 Contacts\cf4 \cb3 .
\f3\b \cf5 self
\f2\b0 \cf4 , from : data)
\f1\fs24 \cf0 \

\f2\fs28 \cf4             completionHandler(contactsSearchData.\cf11 \cb3 results\cf4 \cb3 , 
\f3\b \cf5 nil
\f2\b0 \cf4 )
\f1\fs24 \cf0 \

\f2\fs28 \cf4         \}
\f3\b \cf5 catch
\f2\b0 \cf4 \{
\f1\fs24 \cf0 \

\f2\fs28 \cf4             completionHandler(
\f3\b \cf5 nil
\f2\b0 \cf4 , .\cf9 \cb3 badDecoding\cf4 \cb3 (error))
\f1\fs24 \cf0 \

\f2\fs28 \cf4         \}
\f1\fs24 \cf0 \

\f2\fs28 \cf4       \}
\f1\fs24 \cf0 \

\f2\fs28 \cf4     \}.\cf10 \cb3 resume\cf4 \cb3 ()
\f1\fs24 \cf0 \

\f2\fs28 \cf4   \}\
\
\
\
.....used if not doing \
\
 
\f3\b \cf5 func
\f2\b0 \cf4  loadData() \{
\f1\fs24 \cf0 \

\f2\fs28 \cf4         
\f3\b \cf5 if
\f2\b0 \cf4  
\f3\b \cf5 let
\f2\b0 \cf4  path = \cf6 Bundle\cf4 .\cf6 main\cf4 .\cf10 \cb3 path\cf4 \cb3 (forResource : \cf8 \cb3 "userinfo"\cf4 \cb3 , ofType : \cf8 \cb3 "json"\cf4 \cb3 )\{
\f1\fs24 \cf0 \

\f2\fs28 \cf4         
\f3\b \cf5 let
\f2\b0 \cf4  url = \cf6 URL\cf4 .\cf6 init\cf4 (fileURLWithPath: path)
\f1\fs24 \cf0 \

\f2\fs28 \cf4         
\f3\b \cf5 if
\f2\b0 \cf4  
\f3\b \cf5 let
\f2\b0 \cf4  data = 
\f3\b \cf5 try
\f2\b0 \cf4 ? \cf6 Data\cf4 .\cf6 init\cf4 (contentsOf : url)\{
\f1\fs24 \cf0 \

\f2\fs28 \cf4                 
\f3\b \cf5 do
\f2\b0 \cf4 \{
\f1\fs24 \cf0 \

\f2\fs28 \cf4                     
\f3\b \cf5 let
\f2\b0 \cf4  newContacts = 
\f3\b \cf5 try
\f2\b0 \cf4  \cf6 JSONDecoder\cf4 ().\cf10 \cb3 decode\cf4 \cb3 (\cf11 \cb3 ContactDetails\cf4 \cb3 .\cf11 \cb3 Contacts\cf4 \cb3 .
\f3\b \cf5 self
\f2\b0 \cf4 , from: data)
\f1\fs24 \cf0 \

\f2\fs28 \cf4                     \cf11 \cb3 contacts\cf4 \cb3  = newContacts.\cf11 \cb3 results
\f1\fs24 \cf0 \cb3 \

\f2\fs28 \cf4                 \}
\f3\b \cf5 catch
\f2\b0 \cf4 \{
\f1\fs24 \cf0 \

\f2\fs28 \cf4                     \cf10 \cb3 print\cf4 \cb3 (error)
\f1\fs24 \cf0 \

\f2\fs28 \cf4                 \}
\f1\fs24 \cf0 \

\f2\fs28 \cf4             \}
\f1\fs24 \cf0 \

\f2\fs28 \cf4         \}
\f1\fs24 \cf0 \

\f2\fs28 \cf4             
\f1\fs24 \cf0 \

\f2\fs28 \cf4     \}
\f1\fs24 \cf0 \

\f2\fs28 \cf4 \}}